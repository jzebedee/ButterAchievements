name: Build mod
on:
  workflow_dispatch: 
  push:

env:
  GAMEFOLDER: ./bannerlord
  ARTIFACT_NAME: ButterAchievements

jobs:
  build_submodule:
    runs-on: ubuntu-latest
    steps:
    - name: Setup repo
      uses: actions/checkout@v5
    - name: Set GameFolder absolute path
      run: |
        echo "GAMEFOLDER=$(realpath $GAMEFOLDER)" >> $GITHUB_ENV
    - name: Ensure GameFolder path exists
      run: mkdir -p "$GAMEFOLDER"
    - name: Build
      run: dotnet build -c Release "-p:GameFolder=$GAMEFOLDER" src/
    - name: Upload assets
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.ARTIFACT_NAME }}
        if-no-files-found: error
        path: |
          ${{ env.GAMEFOLDER }}/Modules/
          !${{ env.GAMEFOLDER }}/Modules/Native
          !${{ env.GAMEFOLDER }}/Modules/SandBox
          !${{ env.GAMEFOLDER }}/Modules/StoryMode
  publish_release:
    needs: build_submodule
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
    - name: Checkout repo
      uses: actions/checkout@v5

    - name: Download build artifact
      uses: actions/download-artifact@v5
      with:
        name: ${{ env.ARTIFACT_NAME }}
        path: ./artifact

    - name: Prepare release asset (zip)
      run: |
        # Extract tag name from refs/tags/<tag>
        TAG_NAME="${GITHUB_REF#refs/tags/}"
        ZIP_NAME="ButterAchievements-${TAG_NAME}.zip"
        # Create a zip of the downloaded artifact directory
        zip -r "$ZIP_NAME" ./artifact
        # Persist the zip name for subsequent steps
        echo "ZIP_NAME=$ZIP_NAME" >> $GITHUB_ENV

    - name: Create GitHub release and upload asset
      uses: softprops/action-gh-release@v2
      with:
        files: ${{ env.ZIP_NAME }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}